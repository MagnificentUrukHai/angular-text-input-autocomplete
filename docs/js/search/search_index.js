var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/ChoiceSelectedEvent.html",[0,1.047,1,1.315]],["body/interfaces/ChoiceSelectedEvent.html",[0,0.982,1,1.234,2,0.506,3,0.398,4,0.305,5,0.506,6,1.066,7,1.017,8,0.636,9,1.571,10,1.799,11,2.334,12,1.696,13,0.092,14,1.571,15,0.912,16,1.92,17,1.571,18,0.471,19,1.234,20,2.159,21,0.799,22,1.92,23,1.571,24,2.159,25,1.92,26,0.305,27,1.571,28,1.2,29,0.799,30,1.017,31,1.017,32,0.75,33,0.614,34,0.398,35,0.799,36,0.982,37,0.799,38,0.614,39,0.912,40,1.696,41,2.159,42,0.398,43,0.636,44,0.398,45,0.398,46,0.799,47,1.571,48,1.571,49,1.227,50,1.017,51,1.017,52,1.017,53,0.799,54,0.052,55,1.571,56,1.017,57,1.017,58,0.799,59,0.799,60,0.799,61,1.017,62,1.017,63,1.017,64,1.508,65,0.322,66,1.017,67,1.017,68,1.2,69,1.017,70,0.799,71,0.506,72,1.017,73,0.506,74,1.017,75,1.92,76,1.017,77,1.017,78,1.696,79,1.017,80,1.571,81,1.92,82,1.017,83,1.234,84,1.017,85,1.543,86,0.982,87,1.017,88,1.571,89,1.017,90,0.799,91,1.017,92,0.799,93,1.017,94,1.017,95,1.017,96,1.017,97,2.087,98,1.571,99,1.017,100,1.234,101,1.017,102,1.017,103,1.017,104,1.017,105,1.017,106,0.636,107,1.571,108,1.017,109,1.017,110,1.017,111,1.017,112,2.656,113,1.017,114,2.159,115,2.26,116,1.571,117,2.159,118,1.017,119,1.571,120,1.92,121,1.017,122,1.017,123,1.017,124,1.017,125,1.017,126,1.017,127,1.017,128,1.017,129,1.017,130,1.571,131,1.017,132,1.017,133,0.799,134,1.017,135,1.571,136,1.017,137,1.92,138,1.017,139,1.508,140,1.234,141,1.017,142,1.017,143,1.017,144,1.017,145,1.571,146,1.017,147,1.017,148,0.799,149,1.571,150,2.159,151,1.017,152,1.017,153,1.017,154,1.017,155,1.017,156,1.017,157,1.017,158,1.017,159,1.017,160,1.017,161,1.017,162,1.017,163,1.017,164,1.017,165,1.571,166,1.017,167,1.017,168,1.017,169,1.017,170,1.017,171,1.017,172,1.017,173,1.017,174,1.017,175,1.017,176,1.017,177,0.043]],["title/components/TextInputAutocompleteContainerComponent.html",[65,0.249,178,1.047]],["body/components/TextInputAutocompleteContainerComponent.html",[2,0.979,3,0.769,4,0.59,5,0.979,6,1.172,13,0.09,15,0.769,18,0.751,26,0.59,32,0.769,33,1.135,34,1.172,38,0.769,42,1.172,43,1.231,44,0.769,45,0.769,49,0.979,54,0.068,60,1.969,65,0.447,73,1.247,177,0.068,178,1.816,179,1.968,180,1.968,181,2.609,182,1.546,183,2.281,184,3.323,185,2.507,186,2.507,187,3.323,188,2.507,189,2.507,190,1.968,191,2.507,192,1.969,193,2.904,194,1.968,195,2.167,196,1.968,197,1.968]],["title/directives/TextInputAutocompleteDirective.html",[18,0.502,45,0.654]],["body/directives/TextInputAutocompleteDirective.html",[0,0.512,1,0.643,2,0.407,3,0.32,4,0.245,5,1.396,6,1.2,7,0.819,8,0.512,10,1.755,11,1.324,12,1.765,13,0.092,15,0.821,16,2.247,17,1.324,18,0.499,19,1.503,20,2.365,21,1.309,22,2.365,23,1.666,24,2.247,25,2.365,26,0.245,27,1.324,28,1.197,29,0.643,30,0.819,31,0.819,32,0.821,33,0.651,34,0.32,35,0.643,36,0.828,37,0.643,38,0.517,39,0.821,40,1.503,41,1.914,42,0.517,43,0.828,44,0.32,45,0.517,46,1.04,47,1.914,48,1.914,49,1.328,50,1.324,51,1.666,52,1.324,53,1.04,54,0.052,55,1.914,56,1.666,57,1.324,58,1.04,59,1.04,60,1.04,61,1.324,62,1.324,63,1.666,64,1.503,65,0.335,66,1.324,67,1.324,68,1.479,69,1.324,70,1.04,71,0.658,72,1.324,73,0.658,74,1.666,75,2.247,76,1.324,77,1.666,78,1.503,79,1.324,80,1.914,81,2.247,82,1.666,83,1.765,84,1.324,85,1.59,86,1.197,87,1.324,88,1.666,89,1.666,90,0.643,91,1.324,92,1.04,93,1.666,94,0.819,95,0.819,96,0.819,97,1.934,98,1.324,99,0.819,100,1.04,101,1.324,102,1.666,103,0.819,104,1.324,105,0.819,106,0.512,107,1.324,108,0.819,109,0.819,110,1.324,111,0.819,112,2.462,113,0.819,114,1.914,115,2.138,116,1.324,117,1.914,118,0.819,119,1.324,120,1.666,121,0.819,122,0.819,123,0.819,124,0.819,125,0.819,126,0.819,127,0.819,128,0.819,129,0.819,130,1.324,131,0.819,132,0.819,133,0.643,134,0.819,135,1.324,136,0.819,137,1.666,138,0.819,139,1.309,140,1.04,141,0.819,142,0.819,143,0.819,144,0.819,145,1.324,146,0.819,147,0.819,148,1.765,149,1.324,150,1.914,151,0.819,152,0.819,153,0.819,154,0.819,155,0.819,156,0.819,157,0.819,158,0.819,159,0.819,160,0.819,161,0.819,162,0.819,163,0.819,164,0.819,165,1.324,166,0.819,167,0.819,168,0.819,169,0.819,170,0.819,171,0.819,172,0.819,173,0.819,174,0.819,175,0.819,176,0.819,177,0.036,182,0.643,195,0.643,198,1.666,199,1.755,200,1.086,201,2.767,202,1.086,203,0.819,204,2.101,205,1.086,206,1.086,207,1.086,208,1.086,209,1.086,210,1.086,211,1.309,212,1.086,213,1.086,214,1.086,215,1.086,216,1.324,217,1.086,218,1.086,219,1.086,220,1.086]],["title/components/TextInputAutocompleteMenuComponent.html",[32,0.654,65,0.249]],["body/components/TextInputAutocompleteMenuComponent.html",[2,0.515,3,0.405,4,0.31,5,1.471,6,1.194,8,1.471,9,1.593,10,1.78,12,2.099,13,0.091,14,1.593,15,0.623,18,0.477,19,1.712,21,1.525,26,0.31,32,0.852,33,0.852,34,1.194,36,1.214,37,0.813,38,0.405,40,1.848,42,0.92,43,0.647,44,0.405,45,0.405,49,1.329,54,0.043,64,1.251,65,0.35,68,0.647,73,0.792,78,1.251,85,1.214,86,0.996,90,1.712,97,1.251,100,1.251,115,1.848,133,1.712,139,0.813,140,0.813,148,1.525,177,0.043,178,0.647,179,1.035,180,1.035,182,0.813,183,1.712,185,1.593,186,2.18,188,1.593,189,1.941,190,1.035,191,1.593,192,1.251,193,2.18,194,1.035,195,1.712,196,1.035,197,1.035,201,2.926,203,1.035,204,1.941,211,1.952,216,1.941,221,1.373,222,1.593,223,1.593,224,1.593,225,2.112,226,2.112,227,2.112,228,1.593,229,2.574,230,2.574,231,2.574,232,2.574,233,2.89,234,2.89,235,2.89,236,2.89,237,2.89,238,2.89,239,2.112,240,2.112,241,2.112,242,1.373,243,2.485,244,1.373,245,1.373,246,1.373,247,1.373,248,1.373,249,1.373,250,1.373,251,1.373,252,1.373,253,2.112,254,1.373,255,1.373,256,1.373,257,1.373,258,2.112,259,2.89,260,1.373,261,1.373,262,1.373,263,1.373,264,1.373,265,1.373,266,1.373,267,1.373,268,1.373,269,1.373,270,1.373,271,2.112,272,1.373,273,2.485,274,1.373,275,2.112,276,1.373,277,1.373,278,1.373,279,2.574,280,2.574,281,2.112,282,2.112,283,1.373,284,1.373,285,1.373,286,1.373,287,1.373,288,1.373,289,1.373,290,1.373,291,1.373,292,1.373,293,1.373,294,1.373,295,1.373,296,1.373,297,1.373,298,1.373,299,1.373,300,1.035,301,1.373,302,1.373]],["title/modules/TextInputAutocompleteModule.html",[303,0.654,304,1.047]],["body/modules/TextInputAutocompleteModule.html",[2,1.046,3,0.822,4,0.63,5,1.046,6,1.163,13,0.09,15,1.219,26,0.63,32,1.236,33,1.111,34,1.021,35,1.652,38,1.111,44,0.822,45,1.196,54,0.071,177,0.071,178,1.913,303,0.822,304,1.634,305,2.788,306,3.465,307,3.465,308,2.613,309,3.465,310,2.788,311,2.788,312,2.788]],["title/changelog.html",[39,0.552,313,1.11,314,1.873]],["body/changelog.html",[4,0.565,13,0.066,42,0.737,46,1.481,49,1.472,54,0.066,59,2.123,65,0.281,68,1.179,71,1.213,106,1.179,177,0.066,198,1.885,222,1.885,223,1.885,224,1.885,300,1.885,315,3.583,316,2.499,317,2.499,318,2.499,319,1.481,320,2.499,321,2.499,322,2.499,323,2.499,324,2.499,325,2.499,326,2.499,327,2.499,328,3.583,329,3.788,330,3.788,331,3.232,332,2.499,333,2.499,334,2.499,335,2.499,336,3.788,337,3.583,338,2.499,339,2.499,340,3.923,341,2.499,342,2.499,343,2.499,344,2.499,345,2.499,346,2.499,347,2.499,348,2.499,349,2.499,350,1.885,351,2.499,352,2.499,353,2.857,354,2.499,355,3.583,356,2.499,357,2.499,358,2.499,359,2.499,360,2.703,361,2.499,362,2.499,363,2.499,364,2.499,365,2.499,366,2.438,367,2.499,368,3.232,369,1.885,370,1.179,371,2.499,372,2.499,373,2.499,374,2.499,375,2.499,376,2.499,377,2.499,378,1.885,379,2.499,380,2.499,381,2.499]],["title/dependencies.html",[366,1.413,370,1.254]],["body/dependencies.html",[13,0.086,26,0.755,28,1.576,29,1.98,54,0.079,177,0.079,369,2.521,370,1.822,382,3.342,383,3.342]],["title/index.html",[8,0.884,39,0.552,313,1.11]],["body/index.html",[3,0.835,6,1.147,10,0.967,13,0.089,15,1.082,18,0.463,26,0.64,28,0.967,33,1.147,34,1.031,38,0.956,39,0.835,42,0.604,44,0.835,54,0.058,65,0.393,70,1.214,71,1.062,73,0.769,83,1.214,85,1.335,86,1.335,92,1.214,106,1.53,177,0.058,183,1.214,192,1.214,228,2.135,243,2.446,303,0.835,304,1.335,308,2.135,319,1.922,350,2.135,353,1.546,360,2.769,370,0.967,384,3.243,385,2.831,386,2.049,387,2.049,388,3.964,389,3.497,390,1.214,391,2.049,392,2.049,393,2.049,394,2.049,395,4.024,396,2.831,397,2.049,398,2.049,399,2.049,400,2.049,401,3.497,402,2.049,403,1.546,404,3.243,405,2.831,406,2.049,407,2.049,408,2.049,409,2.049,410,2.049,411,2.049,412,2.049,413,2.049,414,2.049,415,2.049,416,2.049,417,2.049,418,2.049,419,1.546,420,2.049,421,2.049,422,2.049,423,2.049,424,2.049,425,2.049,426,2.049,427,2.049,428,2.049,429,2.049,430,2.831,431,2.049,432,2.049,433,2.049,434,2.049,435,2.049,436,2.049,437,2.049,438,2.049,439,2.049,440,2.831,441,3.795,442,2.049,443,2.049,444,2.049,445,3.67,446,2.049,447,2.049,448,2.049,449,2.049,450,1.546]],["title/license.html",[39,0.552,313,1.11,390,1.11]],["body/license.html",[4,0.597,13,0.069,36,1.246,53,1.565,54,0.069,58,1.565,71,1.257,177,0.069,211,1.565,319,1.565,378,1.993,390,1.565,403,2.774,419,2.774,450,2.527,451,3.678,452,2.642,453,2.642,454,2.642,455,3.35,456,2.642,457,2.642,458,2.642,459,2.642,460,3.35,461,2.642,462,3.867,463,4.231,464,2.642,465,3.35,466,2.642,467,3.35,468,2.642,469,2.642,470,2.642,471,2.642,472,2.642,473,2.642,474,2.642,475,2.642,476,2.642,477,2.642,478,2.642,479,2.642,480,2.642,481,3.35,482,3.35,483,2.642,484,2.642,485,2.642,486,3.35,487,2.642,488,2.642,489,2.642,490,2.642,491,2.642,492,2.642,493,2.642,494,2.642,495,2.642,496,2.642,497,2.642,498,2.642,499,2.642,500,2.642,501,2.642,502,2.642,503,2.642,504,2.642,505,2.642,506,2.642]],["title/modules.html",[303,0.881]],["body/modules.html",[13,0.08,54,0.08,177,0.08,303,1.007,304,1.612,507,3.417]],["title/overview.html",[508,2.254]],["body/overview.html",[0,1.581,13,0.079,18,0.758,54,0.079,65,0.377,177,0.079,273,3.077,303,0.988,508,2.529,509,3.352]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":133,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["0.1.0",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["0.2.0",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":345,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["01",{"_index":373,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":273,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"overview.html":{}}}],["10",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["11a32ad",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":356,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":509,"title":{},"body":{"overview.html":{}}}],["200px",{"_index":225,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["2017",{"_index":378,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["2020",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["3.1.0",{"_index":382,"title":{},"body":{"dependencies.html":{}}}],["4e02a45",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["6",{"_index":353,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["6.0.0",{"_index":383,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["8000",{"_index":443,"title":{},"body":{"index.html":{}}}],["800f07d",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["8d8af83",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["_choic",{"_index":268,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["abov",{"_index":480,"title":{},"body":{"license.html":{}}}],["accept",{"_index":84,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["accessor",{"_index":261,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["action",{"_index":500,"title":{},"body":{"license.html":{}}}],["activ",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["activechoic",{"_index":233,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["actual_compon",{"_index":197,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ad",{"_index":391,"title":{},"body":{"index.html":{}}}],["add",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["allow",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["ancestor",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":474,"title":{},"body":{"license.html":{}}}],["angular",{"_index":360,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/common",{"_index":310,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["angular/cor",{"_index":26,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"dependencies.html":{},"index.html":{}}}],["angulartextinputautocomplet",{"_index":422,"title":{},"body":{"index.html":{}}}],["app",{"_index":404,"title":{},"body":{"index.html":{}}}],["appear",{"_index":50,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["argument",{"_index":216,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["aris",{"_index":504,"title":{},"body":{"license.html":{}}}],["around",{"_index":392,"title":{},"body":{"index.html":{}}}],["array",{"_index":87,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["arrow",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["associ",{"_index":464,"title":{},"body":{"license.html":{}}}],["author",{"_index":494,"title":{},"body":{"license.html":{}}}],["auto",{"_index":228,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["autocomplet",{"_index":34,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["autocomplete.direct",{"_index":311,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete.directive.t",{"_index":7,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:104",{"_index":218,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:147",{"_index":215,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:35",{"_index":210,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:40",{"_index":209,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:45",{"_index":205,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:51",{"_index":208,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:56",{"_index":214,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:61",{"_index":213,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:66",{"_index":212,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:71",{"_index":206,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:76",{"_index":207,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:87",{"_index":202,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.directive.ts:97",{"_index":220,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["autocomplete.module.t",{"_index":305,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["autocomplete/doc",{"_index":428,"title":{},"body":{"index.html":{}}}],["autocompletefor",{"_index":397,"title":{},"body":{"index.html":{}}}],["avail",{"_index":67,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["behavior",{"_index":300,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["block",{"_index":189,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["blur",{"_index":198,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["break",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["brows",{"_index":507,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":399,"title":{},"body":{"index.html":{}}}],["bug",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["built",{"_index":70,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["bundler",{"_index":420,"title":{},"body":{"index.html":{}}}],["c",{"_index":452,"title":{},"body":{"license.html":{}}}],["c105a40",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["c9ff811",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":75,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["caret",{"_index":29,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"dependencies.html":{}}}],["caretposit",{"_index":153,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["catch(err",{"_index":121,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["chang",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":314,"title":{"changelog.html":{}},"body":{}}],["charact",{"_index":47,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["charg",{"_index":459,"title":{},"body":{"license.html":{}}}],["choic",{"_index":10,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["choice.id",{"_index":259,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceload",{"_index":235,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceloaderror",{"_index":234,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices(choic",{"_index":270,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.indexof(this.activechoic",{"_index":272,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices.length",{"_index":274,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choices[0",{"_index":276,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["choiceselect",{"_index":82,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["choiceselectedev",{"_index":1,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["claim",{"_index":497,"title":{},"body":{"license.html":{}}}],["class",{"_index":44,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["class=\"dropdown",{"_index":230,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["close",{"_index":59,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["closemenuonblur",{"_index":63,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["commit",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["commonmodul",{"_index":309,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["compil",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["compodoc",{"_index":426,"title":{},"body":{"index.html":{}}}],["compon",{"_index":65,"title":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{},"overview.html":{}}}],["component_templ",{"_index":194,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["componentfactoryresolv",{"_index":16,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["componentref",{"_index":17,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["compos",{"_index":393,"title":{},"body":{"index.html":{}}}],["condit",{"_index":479,"title":{},"body":{"license.html":{}}}],["connect",{"_index":506,"title":{},"body":{"license.html":{}}}],["const",{"_index":115,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["constructor",{"_index":101,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["constructor(componentfactoryresolv",{"_index":200,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["contain",{"_index":184,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["container'},{'nam",{"_index":196,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["container.compon",{"_index":312,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["container.component.t",{"_index":181,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["content",{"_index":387,"title":{},"body":{"index.html":{}}}],["continu",{"_index":447,"title":{},"body":{"index.html":{}}}],["contract",{"_index":501,"title":{},"body":{"license.html":{}}}],["control",{"_index":161,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["copi",{"_index":462,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":451,"title":{},"body":{"license.html":{}}}],["current",{"_index":437,"title":{},"body":{"index.html":{}}}],["cursor",{"_index":116,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["custom",{"_index":72,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["d2b7cd1",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["damag",{"_index":498,"title":{},"body":{"license.html":{}}}],["de22714",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":465,"title":{},"body":{"license.html":{}}}],["declar",{"_index":306,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["decor",{"_index":252,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["default",{"_index":204,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["defin",{"_index":201,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["demo",{"_index":384,"title":{},"body":{"index.html":{}}}],["democompon",{"_index":409,"title":{},"body":{"index.html":{}}}],["depend",{"_index":370,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{}}}],["dev",{"_index":436,"title":{},"body":{"index.html":{}}}],["develop",{"_index":389,"title":{},"body":{"index.html":{}}}],["direct",{"_index":18,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{},"overview.html":{}}}],["directori",{"_index":438,"title":{},"body":{"index.html":{}}}],["display",{"_index":188,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["distribut",{"_index":472,"title":{},"body":{"license.html":{}}}],["document",{"_index":319,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{}}}],["document:keydown.arrowdown",{"_index":239,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowdown(ev",{"_index":242,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup",{"_index":240,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.arrowup(ev",{"_index":245,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.ent",{"_index":241,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["document:keydown.enter(ev",{"_index":247,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dom",{"_index":179,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdown",{"_index":222,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["dropdownmenu",{"_index":229,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["dropdownmenuel",{"_index":236,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["element",{"_index":192,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["elementref",{"_index":19,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["elm",{"_index":102,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["end",{"_index":41,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["entrycompon",{"_index":307,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{}}}],["environ",{"_index":433,"title":{},"body":{"index.html":{}}}],["err",{"_index":123,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event",{"_index":211,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["event('input",{"_index":164,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.key",{"_index":104,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["event.preventdefault",{"_index":279,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["event.target.valu",{"_index":110,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["eventemitt",{"_index":20,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["everyth",{"_index":421,"title":{},"body":{"index.html":{}}}],["export",{"_index":38,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["express",{"_index":53,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"license.html":{}}}],["extend",{"_index":69,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["f8cf905",{"_index":381,"title":{},"body":{"changelog.html":{}}}],["fals",{"_index":64,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["featur",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"license.html":{}}}],["final",{"_index":407,"title":{},"body":{"index.html":{}}}],["find",{"_index":417,"title":{},"body":{"index.html":{}}}],["findchoic",{"_index":89,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["findchoices(searchtext",{"_index":411,"title":{},"body":{"index.html":{}}}],["fit",{"_index":490,"title":{},"body":{"license.html":{}}}],["fix",{"_index":330,"title":{},"body":{"changelog.html":{}}}],["focu",{"_index":62,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["follow",{"_index":478,"title":{},"body":{"license.html":{}}}],["forc",{"_index":157,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["form",{"_index":160,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["format",{"_index":91,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["formcontrolvalu",{"_index":410,"title":{},"body":{"index.html":{}}}],["free",{"_index":458,"title":{},"body":{"license.html":{}}}],["fulltemplatetypecheck",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":83,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["furnish",{"_index":477,"title":{},"body":{"license.html":{}}}],["gener",{"_index":424,"title":{},"body":{"index.html":{}}}],["get",{"_index":313,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getcaretcoordin",{"_index":27,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoic",{"_index":262,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["getchoicelabel",{"_index":93,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["getchoicelabel(choic",{"_index":416,"title":{},"body":{"index.html":{}}}],["getcomputedstyl",{"_index":136,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["grant",{"_index":457,"title":{},"body":{"license.html":{}}}],["guidelin",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["height",{"_index":224,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["here",{"_index":427,"title":{},"body":{"index.html":{}}}],["herebi",{"_index":456,"title":{},"body":{"license.html":{}}}],["hidden",{"_index":79,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hidemenu",{"_index":172,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["higher",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["highlight",{"_index":430,"title":{},"body":{"index.html":{}}}],["holder",{"_index":495,"title":{},"body":{"license.html":{}}}],["host",{"_index":60,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlisten",{"_index":21,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('blur",{"_index":124,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('document:keydown.arrowdown",{"_index":277,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.arrowup",{"_index":283,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('document:keydown.ent",{"_index":285,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["hostlistener('input",{"_index":109,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["hostlistener('keypress",{"_index":103,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["html",{"_index":191,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["htmltextareael",{"_index":147,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["https://mattlewis92.github.io/angular",{"_index":385,"title":{},"body":{"index.html":{}}}],["implement",{"_index":46,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{}}}],["impli",{"_index":488,"title":{},"body":{"license.html":{}}}],["import",{"_index":15,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["includ",{"_index":403,"title":{},"body":{"index.html":{},"license.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["initi",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["injector",{"_index":22,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["input",{"_index":6,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["input(valu",{"_index":217,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["insertedat",{"_index":11,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["instal",{"_index":388,"title":{},"body":{"index.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/ChoiceSelectedEvent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"overview.html":{}}}],["item",{"_index":349,"title":{},"body":{"changelog.html":{}}}],["item.tolowercase().includes(searchtext.tolowercas",{"_index":415,"title":{},"body":{"index.html":{}}}],["jane",{"_index":413,"title":{},"body":{"index.html":{}}}],["john",{"_index":412,"title":{},"body":{"index.html":{}}}],["jonny'].filter(item",{"_index":414,"title":{},"body":{"index.html":{}}}],["key",{"_index":106,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{}}}],["keyboardev",{"_index":243,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["keyboardeventkeypolyfil",{"_index":405,"title":{},"body":{"index.html":{}}}],["keypress",{"_index":199,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["keypress(key",{"_index":219,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{}}}],["kind",{"_index":487,"title":{},"body":{"license.html":{}}}],["label",{"_index":145,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label).length",{"_index":166,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["label.length",{"_index":170,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lastcaretposit",{"_index":99,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["left",{"_index":140,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["legend",{"_index":190,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["lewi",{"_index":454,"title":{},"body":{"license.html":{}}}],["li",{"_index":293,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.getboundingclientrect",{"_index":296,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["li.scrollintoview",{"_index":299,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liabil",{"_index":499,"title":{},"body":{"license.html":{}}}],["liabl",{"_index":496,"title":{},"body":{"license.html":{}}}],["licens",{"_index":390,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limit",{"_index":467,"title":{},"body":{"license.html":{}}}],["lineheight",{"_index":135,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["lineheight!.replace(/px",{"_index":138,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["liposit",{"_index":295,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liposition.top",{"_index":297,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["liter",{"_index":14,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["local",{"_index":435,"title":{},"body":{"index.html":{}}}],["log",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["lose",{"_index":61,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["match",{"_index":54,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["matt",{"_index":453,"title":{},"body":{"license.html":{}}}],["max",{"_index":223,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["member",{"_index":95,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menu",{"_index":49,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["menu.compon",{"_index":35,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["menu.component.t",{"_index":221,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:35",{"_index":254,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:36",{"_index":255,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:37",{"_index":257,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:38",{"_index":249,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:39",{"_index":256,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:40",{"_index":250,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:41",{"_index":251,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:43",{"_index":260,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:46",{"_index":265,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:53",{"_index":263,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:58",{"_index":244,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:67",{"_index":246,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menu.component.ts:76",{"_index":248,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["menucompon",{"_index":74,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menufactori",{"_index":130,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menuhidden",{"_index":80,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["menushown",{"_index":77,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["merchant",{"_index":489,"title":{},"body":{"license.html":{}}}],["merg",{"_index":470,"title":{},"body":{"license.html":{}}}],["metadata",{"_index":182,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["mit",{"_index":450,"title":{},"body":{"index.html":{},"license.html":{}}}],["model",{"_index":159,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["modifi",{"_index":469,"title":{},"body":{"license.html":{}}}],["modul",{"_index":303,"title":{"modules/TextInputAutocompleteModule.html":{},"modules.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["multipl",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["mwl",{"_index":183,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["mymodul",{"_index":406,"title":{},"body":{"index.html":{}}}],["name",{"_index":195,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["namespac",{"_index":423,"title":{},"body":{"index.html":{}}}],["nearest",{"_index":302,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["need",{"_index":400,"title":{},"body":{"index.html":{}}}],["new",{"_index":78,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["ng",{"_index":158,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ngmodul",{"_index":308,"title":{},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":176,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["node.j",{"_index":434,"title":{},"body":{"index.html":{}}}],["noninfring",{"_index":493,"title":{},"body":{"license.html":{}}}],["notabl",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["notic",{"_index":481,"title":{},"body":{"license.html":{}}}],["now",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":395,"title":{},"body":{"index.html":{}}}],["number",{"_index":40,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["obtain",{"_index":461,"title":{},"body":{"license.html":{}}}],["older",{"_index":398,"title":{},"body":{"index.html":{}}}],["on",{"_index":408,"title":{},"body":{"index.html":{}}}],["onarrowdown(ev",{"_index":278,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onarrowup(ev",{"_index":284,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onblur",{"_index":125,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onc",{"_index":92,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["onchange(valu",{"_index":111,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["ondestroy",{"_index":23,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["onenter(ev",{"_index":286,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["onkeypress(key",{"_index":105,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["option",{"_index":68,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{}}}],["order",{"_index":96,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["otherwis",{"_index":503,"title":{},"body":{"license.html":{}}}],["out",{"_index":505,"title":{},"body":{"license.html":{}}}],["output",{"_index":24,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["overflow",{"_index":226,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["overview",{"_index":508,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["packag",{"_index":366,"title":{"dependencies.html":{}},"body":{"changelog.html":{}}}],["paramet",{"_index":203,"title":{},"body":{"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["part",{"_index":431,"title":{},"body":{"index.html":{}}}],["particular",{"_index":491,"title":{},"body":{"license.html":{}}}],["peer",{"_index":369,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["permiss",{"_index":455,"title":{},"body":{"license.html":{}}}],["permit",{"_index":476,"title":{},"body":{"license.html":{}}}],["person",{"_index":460,"title":{},"body":{"license.html":{}}}],["pipe(takeuntil(this.menuhidden",{"_index":143,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["polyfil",{"_index":401,"title":{},"body":{"index.html":{}}}],["polyfillthen",{"_index":402,"title":{},"body":{"index.html":{}}}],["port",{"_index":442,"title":{},"body":{"index.html":{}}}],["portion",{"_index":484,"title":{},"body":{"license.html":{}}}],["posit",{"_index":186,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["prepar",{"_index":432,"title":{},"body":{"index.html":{}}}],["privat",{"_index":97,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["project",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["promis",{"_index":88,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["properti",{"_index":9,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["provid",{"_index":485,"title":{},"body":{"license.html":{}}}],["publish",{"_index":471,"title":{},"body":{"license.html":{}}}],["purpos",{"_index":492,"title":{},"body":{"license.html":{}}}],["regular",{"_index":52,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["rel",{"_index":187,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{}}}],["relat",{"_index":429,"title":{},"body":{"index.html":{}}}],["releas",{"_index":448,"title":{},"body":{"index.html":{}}}],["releaselicens",{"_index":449,"title":{},"body":{"index.html":{}}}],["reload",{"_index":444,"title":{},"body":{"index.html":{}}}],["repo",{"_index":439,"title":{},"body":{"index.html":{}}}],["requir",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["restrict",{"_index":466,"title":{},"body":{"license.html":{}}}],["result",{"_index":177,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":86,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["right",{"_index":468,"title":{},"body":{"license.html":{}}}],["run",{"_index":441,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":37,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["rxjs/oper",{"_index":31,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["save",{"_index":396,"title":{},"body":{"index.html":{}}}],["scroll",{"_index":331,"title":{},"body":{"changelog.html":{}}}],["scrollabl",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["scrollbar",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["scrolltochoice(index",{"_index":288,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["search",{"_index":55,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchregexp",{"_index":56,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["searchtext",{"_index":90,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["see",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":81,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["selectchoic",{"_index":237,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["selector",{"_index":42,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"changelog.html":{},"index.html":{}}}],["sell",{"_index":475,"title":{},"body":{"license.html":{}}}],["server",{"_index":440,"title":{},"body":{"index.html":{}}}],["set",{"_index":269,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setchoices(choic",{"_index":264,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["setcursorat",{"_index":165,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shall",{"_index":482,"title":{},"body":{"license.html":{}}}],["show",{"_index":66,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["showmenu",{"_index":129,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["shown",{"_index":76,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["smooth",{"_index":301,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["softwar",{"_index":463,"title":{},"body":{"license.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["src/text",{"_index":5,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["standard",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":39,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"index.html":{}}}],["startindex",{"_index":150,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["string",{"_index":85,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["style",{"_index":185,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.left.px]=\"position?.left",{"_index":232,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["style.top.px]=\"position?.top",{"_index":231,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["subject",{"_index":36,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"license.html":{}}}],["sublicens",{"_index":473,"title":{},"body":{"license.html":{}}}],["subscribe(choic",{"_index":144,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["substanti",{"_index":483,"title":{},"body":{"license.html":{}}}],["tabl",{"_index":386,"title":{},"body":{"index.html":{}}}],["takeuntil",{"_index":30,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["templat",{"_index":73,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"index.html":{}}}],["test",{"_index":445,"title":{},"body":{"index.html":{}}}],["test:watch",{"_index":446,"title":{},"body":{"index.html":{}}}],["text",{"_index":33,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{},"index.html":{}}}],["textarea",{"_index":28,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"dependencies.html":{},"index.html":{}}}],["textarea.dispatchevent(new",{"_index":163,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.focu",{"_index":168,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.selectionstart",{"_index":155,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.setselectionrange(setcursorat",{"_index":167,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea.valu",{"_index":149,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["textarea[mwltextinputautocomplete],input[type=\"text\"][mwltextinputautocomplet",{"_index":43,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["textinputautocompletecontainercompon",{"_index":178,"title":{"components/TextInputAutocompleteContainerComponent.html":{}},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletedirect",{"_index":45,"title":{"directives/TextInputAutocompleteDirective.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemenucompon",{"_index":32,"title":{"components/TextInputAutocompleteMenuComponent.html":{}},"body":{"interfaces/ChoiceSelectedEvent.html":{},"components/TextInputAutocompleteContainerComponent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{},"modules/TextInputAutocompleteModule.html":{}}}],["textinputautocompletemodul",{"_index":304,"title":{"modules/TextInputAutocompleteModule.html":{}},"body":{"modules/TextInputAutocompleteModule.html":{},"index.html":{},"modules.html":{}}}],["this._choic",{"_index":271,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this._choices[index",{"_index":289,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.activechoic",{"_index":275,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices.indexof(this.activechoic",{"_index":280,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choices[index",{"_index":281,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.choiceselected.emit",{"_index":169,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.closemenuonblur",{"_index":127,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(this.menucompon",{"_index":131,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.dropdownmenuel",{"_index":290,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.children[index",{"_index":294,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.dropdownmenuelement.nativeelement.getboundingclientrect",{"_index":292,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.elm.nativeel",{"_index":137,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.elm.nativeelement.selectionstart",{"_index":117,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.getchoicelabel(choic",{"_index":146,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.hidemenu",{"_index":114,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.injector",{"_index":134,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu",{"_index":112,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.lastcaretposit",{"_index":154,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu!.triggercharacterposit",{"_index":151,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.changedetectorref.detectchang",{"_index":120,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.destroy",{"_index":173,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choic",{"_index":118,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceload",{"_index":119,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.choiceloaderror",{"_index":122,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.posit",{"_index":141,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.component.instance.selectchoic",{"_index":142,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menu.lastcaretposit",{"_index":126,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden$.next",{"_index":174,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menuhidden.emit",{"_index":175,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.menushown.emit",{"_index":171,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.scrolltochoice(index",{"_index":282,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.selectchoice.next(this.activechoic",{"_index":287,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["this.showmenu",{"_index":108,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.triggercharact",{"_index":107,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["this.viewcontainerref.createcompon",{"_index":132,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["through",{"_index":394,"title":{},"body":{"index.html":{}}}],["top",{"_index":139,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["tort",{"_index":502,"title":{},"body":{"license.html":{}}}],["trackbyid",{"_index":238,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["tree",{"_index":180,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["trigger",{"_index":48,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharact",{"_index":51,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["triggercharacterposit",{"_index":98,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["true",{"_index":128,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["tslint:dis",{"_index":94,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["typeof",{"_index":258,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposit",{"_index":291,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["ulposition.bottom",{"_index":298,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["undefin",{"_index":100,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["updat",{"_index":162,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["upgrad",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["us",{"_index":71,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"changelog.html":{},"index.html":{},"license.html":{}}}],["usag",{"_index":418,"title":{},"body":{"index.html":{}}}],["valu",{"_index":148,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["value.slice(0",{"_index":152,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value.slice(caretposit",{"_index":156,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["value[this.menu.triggercharacterposit",{"_index":113,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["var",{"_index":193,"title":{},"body":{"components/TextInputAutocompleteContainerComponent.html":{},"components/TextInputAutocompleteMenuComponent.html":{}}}],["version",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["via",{"_index":425,"title":{},"body":{"index.html":{}}}],["view",{"_index":350,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["viewchild",{"_index":253,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewchild('dropdownmenu",{"_index":267,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["viewcontainerref",{"_index":25,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["void",{"_index":266,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}],["w",{"_index":57,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{}}}],["warranti",{"_index":486,"title":{},"body":{"license.html":{}}}],["whether",{"_index":58,"title":{},"body":{"interfaces/ChoiceSelectedEvent.html":{},"directives/TextInputAutocompleteDirective.html":{},"license.html":{}}}],["without",{"_index":419,"title":{},"body":{"index.html":{},"license.html":{}}}],["y",{"_index":227,"title":{},"body":{"components/TextInputAutocompleteMenuComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ChoiceSelectedEvent.html":{"url":"interfaces/ChoiceSelectedEvent.html","title":"interface - ChoiceSelectedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ChoiceSelectedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        choice\n                                \n                                \n                                        insertedAt\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        choice\n                                    \n                                \n                                \n                                    \n                                        choice:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insertedAt\n                                    \n                                \n                                \n                                    \n                                        insertedAt:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * Whether to close the menu when the host textarea loses focus\n   */\n  @Input() closeMenuOnBlur = false;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n\n      if (this.closeMenuOnBlur === true) {\n        this.hideMenu();\n      }\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n      const lineHeight = +getComputedStyle(\n        this.elm.nativeElement\n      ).lineHeight!.replace(/px$/, '');\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteContainerComponent.html":{"url":"components/TextInputAutocompleteContainerComponent.html","title":"component - TextInputAutocompleteContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-container.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-container\n            \n\n\n            \n                styles\n                \n    :host {\n      position: relative;\n      display: block;\n    }\n  \n            \n\n            \n                template\n                \n            \n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-container',\n  styles: [\n    `\n    :host {\n      position: relative;\n      display: block;\n    }\n  `\n  ],\n  template: ''\n})\nexport class TextInputAutocompleteContainerComponent {}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': 'mwl-text-input-autocomplete-menu'}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/TextInputAutocompleteDirective.html":{"url":"directives/TextInputAutocompleteDirective.html","title":"directive - TextInputAutocompleteDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  TextInputAutocompleteDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/text-input-autocomplete.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenuOnBlur\n                            \n                            \n                                findChoices\n                            \n                            \n                                getChoiceLabel\n                            \n                            \n                                menuComponent\n                            \n                            \n                                searchRegexp\n                            \n                            \n                                triggerCharacter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                choiceSelected\n                            \n                            \n                                menuHidden\n                            \n                            \n                                menuShown\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                input\n                            \n                            \n                                keypress\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver, viewContainerRef: ViewContainerRef, injector: Injector, elm: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in src/text-input-autocomplete.directive.ts:87\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        injector\n                                                  \n                                                        \n                                                                    Injector\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elm\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        closeMenuOnBlur\n                    \n                    \n                        Whether to close the menu when the host textarea loses focus\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        findChoices\n                    \n                    \n                        A function that accepts a search string and returns an array of choices. Can also return a promise.\n\n                            \n                            Type:    function\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:71\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        getChoiceLabel\n                    \n                    \n                        A function that formats the selected choice once selected.\n\n                            \n                            Type:    function\n\n                            \n                        \n                            Default value: choice => choice\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:76\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuComponent\n                    \n                    \n                        The menu component to show with available options.\nYou can extend the built in TextInputAutocompleteMenuComponent component to use a custom template\n\n                        \n                            Default value: TextInputAutocompleteMenuComponent\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:51\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchRegexp\n                    \n                    \n                        The regular expression that will match the search text after the trigger character\n\n                        \n                            Default value: /^\\w*$/\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        triggerCharacter\n                    \n                    \n                        The character that will trigger the menu to appear\n\n                        \n                            Default value: '@'\n                        \n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:35\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        choiceSelected\n                    \n                    \n                        Called when a choice is selected\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:66\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuHidden\n                    \n                    \n                        Called when the options menu is hidden\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:61\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        menuShown\n                    \n                    \n                        Called when the options menu is shown\n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:56\n                            \n                        \n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:147\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.target.value' \n                        \n                    \n                \n                    \ninput(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:104\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            keypress\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event.key' \n                        \n                    \n                \n                    \nkeypress(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete.directive.ts:97\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n\n\n    \n        import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Injector,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef\n} from '@angular/core';\nimport getCaretCoordinates from 'textarea-caret';\nimport { takeUntil } from 'rxjs/operators';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\nimport { Subject } from 'rxjs';\n\nexport interface ChoiceSelectedEvent {\n  choice: any;\n  insertedAt: {\n    start: number;\n    end: number;\n  };\n}\n\n@Directive({\n  selector:\n    'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'\n})\nexport class TextInputAutocompleteDirective implements OnDestroy {\n  /**\n   * The character that will trigger the menu to appear\n   */\n  @Input() triggerCharacter = '@';\n\n  /**\n   * The regular expression that will match the search text after the trigger character\n   */\n  @Input() searchRegexp = /^\\w*$/;\n\n  /**\n   * Whether to close the menu when the host textarea loses focus\n   */\n  @Input() closeMenuOnBlur = false;\n\n  /**\n   * The menu component to show with available options.\n   * You can extend the built in `TextInputAutocompleteMenuComponent` component to use a custom template\n   */\n  @Input() menuComponent = TextInputAutocompleteMenuComponent;\n\n  /**\n   * Called when the options menu is shown\n   */\n  @Output() menuShown = new EventEmitter();\n\n  /**\n   * Called when the options menu is hidden\n   */\n  @Output() menuHidden = new EventEmitter();\n\n  /**\n   * Called when a choice is selected\n   */\n  @Output() choiceSelected = new EventEmitter();\n\n  /**\n   * A function that accepts a search string and returns an array of choices. Can also return a promise.\n   */\n  @Input() findChoices: (searchText: string) => any[] | Promise;\n\n  /**\n   * A function that formats the selected choice once selected.\n   */\n  @Input() getChoiceLabel: (choice: any) => string = choice => choice;\n\n  /* tslint:disable member-ordering */\n  private menu:\n    | {\n        component: ComponentRef;\n        triggerCharacterPosition: number;\n        lastCaretPosition?: number;\n      }\n    | undefined;\n\n  private menuHidden$ = new Subject();\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    private injector: Injector,\n    private elm: ElementRef\n  ) {}\n\n  @HostListener('keypress', ['$event.key'])\n  onKeypress(key: string) {\n    if (key === this.triggerCharacter) {\n      this.showMenu();\n    }\n  }\n\n  @HostListener('input', ['$event.target.value'])\n  onChange(value: string) {\n    if (this.menu) {\n      if (value[this.menu.triggerCharacterPosition] !== this.triggerCharacter) {\n        this.hideMenu();\n      } else {\n        const cursor = this.elm.nativeElement.selectionStart;\n        if (cursor  {\n                if (this.menu) {\n                  this.menu.component.instance.choices = choices;\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              })\n              .catch(err => {\n                if (this.menu) {\n                  this.menu.component.instance.choiceLoading = false;\n                  this.menu.component.instance.choiceLoadError = err;\n                  this.menu.component.changeDetectorRef.detectChanges();\n                }\n              });\n          }\n        }\n      }\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    if (this.menu) {\n      this.menu.lastCaretPosition = this.elm.nativeElement.selectionStart;\n\n      if (this.closeMenuOnBlur === true) {\n        this.hideMenu();\n      }\n    }\n  }\n\n  private showMenu() {\n    if (!this.menu) {\n      const menuFactory = this.componentFactoryResolver.resolveComponentFactory(this.menuComponent);\n      this.menu = {\n        component: this.viewContainerRef.createComponent(\n          menuFactory,\n          0,\n          this.injector\n        ),\n        triggerCharacterPosition: this.elm.nativeElement.selectionStart\n      };\n      const lineHeight = +getComputedStyle(\n        this.elm.nativeElement\n      ).lineHeight!.replace(/px$/, '');\n      const { top, left } = getCaretCoordinates(\n        this.elm.nativeElement,\n        this.elm.nativeElement.selectionStart\n      );\n      this.menu.component.instance.position = {\n        top: top + lineHeight,\n        left\n      };\n      this.menu.component.changeDetectorRef.detectChanges();\n      this.menu.component.instance.selectChoice\n        .pipe(takeUntil(this.menuHidden$))\n        .subscribe(choice => {\n          const label = this.getChoiceLabel(choice);\n          const textarea: HTMLTextAreaElement = this.elm.nativeElement;\n          const value: string = textarea.value;\n          const startIndex = this.menu!.triggerCharacterPosition;\n          const start = value.slice(0, startIndex);\n          const caretPosition =\n            this.menu!.lastCaretPosition || textarea.selectionStart;\n          const end = value.slice(caretPosition);\n          textarea.value = start + label + end;\n          // force ng model / form control to update\n          textarea.dispatchEvent(new Event('input'));\n          this.hideMenu();\n          const setCursorAt = (start + label).length;\n          textarea.setSelectionRange(setCursorAt, setCursorAt);\n          textarea.focus();\n          this.choiceSelected.emit({\n            choice,\n            insertedAt: {\n              start: startIndex,\n              end: startIndex + label.length\n            }\n          });\n        });\n      this.menuShown.emit();\n    }\n  }\n\n  private hideMenu() {\n    if (this.menu) {\n      this.menu.component.destroy();\n      this.menuHidden$.next();\n      this.menuHidden.emit();\n      this.menu = undefined;\n    }\n  }\n\n  ngOnDestroy() {\n    this.hideMenu();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TextInputAutocompleteMenuComponent.html":{"url":"components/TextInputAutocompleteMenuComponent.html","title":"component - TextInputAutocompleteMenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TextInputAutocompleteMenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/text-input-autocomplete-menu.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                mwl-text-input-autocomplete-menu\n            \n\n\n            \n                styles\n                \n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    \n            \n\n            \n                template\n                 0\"\n  #dropdownMenu\n  class=\"dropdown-menu\"\n  [style.top.px]=\"position?.top\"\n  [style.left.px]=\"position?.left\">\n  \n    \n      {{ choice }}\n    \n  \n\n\n            \n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activeChoice\n                            \n                            \n                                choiceLoadError\n                            \n                            \n                                choiceLoading\n                            \n                            \n                                dropdownMenuElement\n                            \n                            \n                                position\n                            \n                            \n                                searchText\n                            \n                            \n                                selectChoice\n                            \n                            \n                                trackById\n                            \n                        \n                    \n                \n\n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown.ArrowDown\n                            \n                            \n                                document:keydown.ArrowUp\n                            \n                            \n                                document:keydown.Enter\n                            \n                        \n                    \n                \n\n        \n    \n\n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowDown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowDown(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.ArrowUp\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.ArrowUp(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:67\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown.Enter\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown.Enter(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:76\n                            \n                        \n\n\n            \n        \n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activeChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activeChoice:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoadError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoadError:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            choiceLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        choiceLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dropdownMenuElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        dropdownMenuElement:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchText\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchText:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectChoice\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        selectChoice:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trackById\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        trackById:     \n\n                    \n                \n                    \n                        \n                            Default value : (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice\n                        \n                    \n                        \n                            \n                                    Defined in src/text-input-autocomplete-menu.component.ts:43\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        choices\n                    \n                \n\n                \n                    \n                        getchoices()\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:53\n                                \n                            \n\n                \n                    \n                        setchoices(choices: [])\n                    \n                \n                            \n                                \n                                    Defined in src/text-input-autocomplete-menu.component.ts:46\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            choices\n                                                    \n                                                            \n                                                                        []\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { Subject } from 'rxjs';\n\n@Component({\n  selector: 'mwl-text-input-autocomplete-menu',\n  template: `\n     0\"\n      #dropdownMenu\n      class=\"dropdown-menu\"\n      [style.top.px]=\"position?.top\"\n      [style.left.px]=\"position?.left\">\n      \n        \n          {{ choice }}\n        \n      \n    \n  `,\n  styles: [\n    `\n      .dropdown-menu {\n        display: block;\n        max-height: 200px;\n        overflow-y: auto;\n      }\n    `\n  ]\n})\nexport class TextInputAutocompleteMenuComponent {\n  @ViewChild('dropdownMenu') dropdownMenuElement: ElementRef;\n  position: { top: number; left: number };\n  selectChoice = new Subject();\n  activeChoice: any;\n  searchText: string;\n  choiceLoadError: any;\n  choiceLoading = false;\n  private _choices: any[];\n  trackById = (index: number, choice: any) =>\n    typeof choice.id !== 'undefined' ? choice.id : choice;\n\n  set choices(choices: any[]) {\n    this._choices = choices;\n    if (choices.indexOf(this.activeChoice) === -1 && choices.length > 0) {\n      this.activeChoice = choices[0];\n    }\n  }\n\n  get choices() {\n    return this._choices;\n  }\n\n  @HostListener('document:keydown.ArrowDown', ['$event'])\n  onArrowDown(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index + 1]) {\n      this.scrollToChoice(index + 1);\n    }\n  }\n\n  @HostListener('document:keydown.ArrowUp', ['$event'])\n  onArrowUp(event: KeyboardEvent) {\n    event.preventDefault();\n    const index = this.choices.indexOf(this.activeChoice);\n    if (this.choices[index - 1]) {\n      this.scrollToChoice(index - 1);\n    }\n  }\n\n  @HostListener('document:keydown.Enter', ['$event'])\n  onEnter(event: KeyboardEvent) {\n    if (this.choices.indexOf(this.activeChoice) > -1) {\n      event.preventDefault();\n      this.selectChoice.next(this.activeChoice);\n    }\n  }\n\n  private scrollToChoice(index: number) {\n    this.activeChoice = this._choices[index];\n    \n    if (this.dropdownMenuElement) {\n      const ulPosition = this.dropdownMenuElement.nativeElement.getBoundingClientRect();\n      const li = this.dropdownMenuElement.nativeElement.children[index];\n      const liPosition = li.getBoundingClientRect();\n      \n      if (liPosition.top  ulPosition.bottom) {\n        li.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest'\n        });\n      }\n    }\n  }\n}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\"  #dropdownMenu  class=\"dropdown-menu\"  [style.top.px]=\"position?.top\"  [style.left.px]=\"position?.left\">            {{ choice }}      '\n    var COMPONENTS = [{'name': 'TextInputAutocompleteContainerComponent', 'selector': 'mwl-text-input-autocomplete-container'},{'name': 'TextInputAutocompleteMenuComponent', 'selector': 'mwl-text-input-autocomplete-menu'}];\n    var DIRECTIVES = [{'name': 'TextInputAutocompleteDirective', 'selector': 'textarea[mwlTextInputAutocomplete],input[type=\"text\"][mwlTextInputAutocomplete]'}];\n    var ACTUAL_COMPONENT = {'name': 'TextInputAutocompleteMenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TextInputAutocompleteModule.html":{"url":"modules/TextInputAutocompleteModule.html","title":"module - TextInputAutocompleteModule","body":"\n                   \n\n\n\n\n  Modules\n  TextInputAutocompleteModule\n\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/text-input-autocomplete.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TextInputAutocompleteContainerComponent\n                            \n                            \n                                TextInputAutocompleteDirective\n                            \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TextInputAutocompleteMenuComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TextInputAutocompleteContainerComponent\n                            \n                            \n                                    TextInputAutocompleteDirective\n                            \n                            \n                                    TextInputAutocompleteMenuComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TextInputAutocompleteDirective } from './text-input-autocomplete.directive';\nimport { TextInputAutocompleteContainerComponent } from './text-input-autocomplete-container.component';\nimport { TextInputAutocompleteMenuComponent } from './text-input-autocomplete-menu.component';\n\n@NgModule({\n  declarations: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  imports: [CommonModule],\n  exports: [\n    TextInputAutocompleteDirective,\n    TextInputAutocompleteContainerComponent,\n    TextInputAutocompleteMenuComponent\n  ],\n  entryComponents: [TextInputAutocompleteMenuComponent]\n})\nexport class TextInputAutocompleteModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file. See standard-version for commit guidelines.\n\n0.4.0 (2020-02-10)\nBug Fixes\n\nscroll behavior if menu has multiple scrollable ancestors (c105a40)\n\nFeatures\n\nadd option to close menu on blur (800f07d)\n\n\n0.3.0 (2018-07-08)\nFeatures\n\nadd a component selector to the dropdown menu (c9ff811), closes #8\n\n\n0.2.1 (2018-06-16)\nBug Fixes\n\nmenu: scroll active item into view when using arrow keys (de22714), closes #6\n\n\n0.2.0 (2018-05-14)\nFeatures\n\nadd max height and scrollbar to menu (11a32ad)\nupgrade to angular 6 (8d8af83)\n\nBREAKING CHANGES\n\nangular 6 or higher is now required to use this package\n\n\n0.1.2 (2018-05-05)\nBug Fixes\n\nallow angular 6 peer dependency (4e02a45)\n\n\n0.1.1 (2018-01-10)\nBug Fixes\n\nallow the package to be compiled with fullTemplateTypecheck (d2b7cd1)\n\n\n0.1.0 (2017-10-09)\nFeatures\n\ninitial implementation (f8cf905)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            textarea-caret : ^3.1.0\n    \n\n\n    \n    \n        Peer Dependencies\n    \n    \n        \n            @angular/core : >=6.0.0 \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular text input autocomplete\n\n\n\n\n\n\n\nDemo\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/\nTable of contents\n\nAbout\nInstallation\nDocumentation\nDevelopment\nLicense\n\nAbout\nA angular 6+ directive for adding autocomplete functionality to text input elements, built around composability\nInstallation\nInstall through npm:\nnpm install --save angular-text-input-autocompleteFor older browsers you will need the keyboardevent-key-polyfill polyfill:\nnpm install --save keyboardevent-key-polyfillThen include in your apps module:\nimport { polyfill as keyboardEventKeyPolyfill } from 'keyboardevent-key-polyfill';\nimport { NgModule } from '@angular/core';\nimport { TextInputAutocompleteModule } from 'angular-text-input-autocomplete';\n\nkeyboardEventKeyPolyfill();\n\n@NgModule({\n  imports: [TextInputAutocompleteModule]\n})\nexport class MyModule {}Finally use in one of your apps components:\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'mwl-demo-app',\n  template: `\n    \n      \n      \n    \n  `\n})\nexport class DemoComponent {\n  formControlValue = '';\n\n  findChoices(searchText: string) {\n    return ['John', 'Jane', 'Jonny'].filter(item =>\n      item.toLowerCase().includes(searchText.toLowerCase())\n    );\n  }\n\n  getChoiceLabel(choice: string) {\n    return `@${choice} `;\n  }\n}You may also find it useful to view the demo source.\nUsage without a module bundler\n\n\n    // everything is exported angularTextInputAutocomplete namespace\nDocumentation\nAll documentation is auto-generated from the source via compodoc and can be viewed here:\nhttps://mattlewis92.github.io/angular-text-input-autocomplete/docs/\nRelated\nangular-text-input-highlight - a component for highlighting parts of a textarea\nDevelopment\nPrepare your environment\n\nInstall Node.js and NPM\nInstall local dev dependencies: npm install while current directory is this repo\n\nDevelopment server\nRun npm start to start a development server on port 8000 with auto reload + tests.\nTesting\nRun npm test to run tests once or npm run test:watch to continually run tests.\nRelease\nnpm run releaseLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 Matt Lewis\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TextInputAutocompleteModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        2 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
